name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  pr-info:
    name: PR Information
    runs-on: ubuntu-latest
    
    steps:
    - name: PR Details
      run: |
        echo "========================================="
        echo "üìã PULL REQUEST INFORMATION"
        echo "========================================="
        echo ""
        echo "PR #${{ github.event.pull_request.number }}"
        echo "Title: ${{ github.event.pull_request.title }}"
        echo "Author: ${{ github.event.pull_request.user.login }}"
        echo "Base: ${{ github.event.pull_request.base.ref }}"
        echo "Head: ${{ github.event.pull_request.head.ref }}"
        echo ""

  changed-files:
    name: Detect Changed Files
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check changed files
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'
            
    - name: Report changes
      run: |
        echo "Backend changed: ${{ steps.filter.outputs.backend }}"
        echo "Frontend changed: ${{ steps.filter.outputs.frontend }}"

  backend-validation:
    name: Validate Backend
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.backend == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Grant execute permission
      run: chmod +x backend/gradlew
      
    - name: Run tests
      working-directory: ./backend
      run: ./gradlew test
      
    - name: Check code style
      working-directory: ./backend
      run: ./gradlew checkstyleMain checkstyleTest || true
      
    - name: Build
      working-directory: ./backend
      run: ./gradlew build -x test

  frontend-validation:
    name: Validate Frontend
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.frontend == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Lint
      working-directory: ./frontend
      run: npx eslint src/ --ext .ts,.tsx || true
      
    - name: Type check
      working-directory: ./frontend
      run: npx tsc --noEmit
      
    - name: Build
      working-directory: ./frontend
      run: npm run build
      env:
        CI: false

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        
    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  pr-validation-summary:
    name: PR Validation Summary
    runs-on: ubuntu-latest
    needs: [backend-validation, frontend-validation, security-scan]
    if: always()
    
    steps:
    - name: Summary
      run: |
        echo "========================================="
        echo "‚úÖ PR VALIDATION SUMMARY"
        echo "========================================="
        echo ""
        echo "Backend validation: ${{ needs.backend-validation.result }}"
        echo "Frontend validation: ${{ needs.frontend-validation.result }}"
        echo "Security scan: ${{ needs.security-scan.result }}"
        echo ""
        if [[ "${{ needs.backend-validation.result }}" == "failure" ]] || \
           [[ "${{ needs.frontend-validation.result }}" == "failure" ]] || \
           [[ "${{ needs.security-scan.result }}" == "failure" ]]; then
          echo "‚ùå PR validation failed!"
          exit 1
        else
          echo "‚úÖ All checks passed! PR is ready for review."
        fi
